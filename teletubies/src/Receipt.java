
import com.itextpdf.text.Document;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import javax.swing.JOptionPane;
import teletubies.Order;
import teletubies.Payment;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author acer
 */
public class Receipt extends javax.swing.JFrame {

    private String name;
    private Payment pay;
    private GetOrder gO;
    private double payment;
    private double change;
    
    /**
     * Creates new form Receipt
     */
    public Receipt() {
        initComponents();
    }

    public Receipt(String name , Payment pay,GetOrder gO , double payment ,  double change ) {
        this.name = name;
        this.pay = pay;
        this.gO = gO;
        this.payment = payment;
        this.change = change;
        initComponents();
        printBill(billFormat());
        gO.clearOrder();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Teletubbies Cafe");
        setResizable(false);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(1280, 720));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setPreferredSize(new java.awt.Dimension(1280, 720));
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Receipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Receipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Receipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Receipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new Receipt().setVisible(true);
            }
        });
    }
    
    public void printBill(String format){
        String path = "./Bill";
        Order order = pay.getOrder();
        try{
            String filepath = path + "/"+"Bill OrderID"+ order.getOrderID()  + " Date "+order.getOrderDate() + ".pdf";
            Document doc = new Document();
            PdfWriter.getInstance(doc, new FileOutputStream(filepath) );
            doc.open();
            doc.add(new Paragraph(format));
            doc.close();
            openBill(filepath);
        }
        catch(Exception e){
            System.out.println(e);
        }
    }
    public void openBill(String path){
        try{
            File file = new File(path);
            if(file.exists()){
                if(Desktop.isDesktopSupported()){
                    Desktop.getDesktop().open(file);
                }
                else{
                    JOptionPane.showMessageDialog(null , "Not Supported" , "ALERT MESSAGE" , JOptionPane.ERROR_MESSAGE);
                }
            }
            else{
                JOptionPane.showMessageDialog(null , "No Bill Exist" , "ALERT MESSAGE" , JOptionPane.ERROR_MESSAGE);
            }
        }
        catch(Exception e){
            System.out.println(e);
        }
    }
    public String billFormat(){
        String format = "";
        try{
            Order order = pay.getOrder();
            /*format += ("\t \tTeletubies Cafe \n");
            format += "\t \tKMITL \n";
            format += "\t \tEmployee : " + name + "\n";
            format += "\t \tOrderID : " + order.getOrderID() + "\n";
            format += "\t \tDate : " + order.getOrderDate()+ "\n";*/
            format += "                 Teletubies Cafe \n";  //b mean bill textarea
            format += "                 KMITL \n";
            format += "                 Employee : " + name + "\n";
            format += "                 OrderID : " + order.getOrderID() + "\n";
            format += "                 Date : " + order.getOrderDate()+ "\n";
            format += "--------------------------------------------------------------------------------------------------------------------------\n";
            //format += "\tItem \t\tQty \tprice" + "\n";
            format += "        Item                Qty        price" + "\n";
            format += "--------------------------------------------------------------------------------------------------------------------------\n";

            for(int i = 0 ; i < order.getFood().size(); i++){
                String name = order.getOrderFoodName().get(i);
                int qty = order.getOrderQuantity().get(i);
                double price = order.getFood().get(i).getfoodPrice()*qty;
                if (name.length() < 14){
                    //format +=  " "+ name +"\t\t\t" +qty +"\t"+ price + "\n";
                    format +=  " "+ name +"                        " +qty +"        "+ price + "\n";
                } else if (name.length() <= 30){
                   //format += " "+ name +"\t\t" +qty +"\t"+ price + "\n";
                   format += " "+ name +"                " +qty +"        "+ price + "\n";
                } else {
                    //format +=  " "+ name +"\t" +qty +"\t"+ price + "\n";
                    format +=  " "+ name +"        " +qty +"        "+ price + "\n";
                }
            }
           format += "--------------------------------------------------------------------------------------------------------------------------\n";
           /*format +=  " \t \tTotal : " + order.getTotalPrice() + "\n";       
           format +=  " \t \tPayment : " + payment + "\n";         
           format +=  " \t \tChange : " + change + "\n";  */
           format +=  "                  Total : " + order.getTotalPrice() + "\n";       
           format +=  "                  Payment : " + payment + "\n";         
           format +=  "                  Change : " + change + "\n";  
           format +=  "--------------------------------------------------------------------------------------------------------------------------\n";  
           //format +=  " \t \tThank for your business!\n";
           format +=  "                  Thank for your business!\n";
           
        }
        catch(Exception e){
            e.printStackTrace();
        }
        //show bill format
        //System.out.println(format);
        return format;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
